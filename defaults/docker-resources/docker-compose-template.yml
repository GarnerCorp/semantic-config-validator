  CONF_TEST:
    image: >-
      VALIDATOR_IMAGE
    environment:
      TRACE: 'TRACE_STATUS'
      LIGHTHOUSE_NEO4J_EMBEDDED: 'false'
      LIGHTHOUSE_RABBITMQ_EMBEDDED: 'false'
      LIGHTHOUSE_PAPYRUS_EMBEDDED: 'false'
      LIGHTHOUSE_VPR_EMBEDDED: 'false'
      LIGHTHOUSE_NEO4J_SERVER_URI: 'bolt://neo4j'
      LIGHTHOUSE_EVENT_NOTIFIER_RABBITMQ_HOSTNAME: 'rabbitmq'
      BACKEND_SUCCESS_RESULT: >-
        SUCCEEDING_WITH
      BACKEND_HEALTH_ENDPOINT: 'PLACE_TO_HIT'
      BACKEND_STARTUP_ARGS: >-
        STARTUP_ARGUMENTS
      CONFIG_TESTER_RESPONSE_READY: >-
        READY_RESPONSE
      UNIT: >-
        CONFIG_UNIT
    depends_on:
      - neo4j
    entrypoint: |
      sh -c '
      if [ -n "$TRACE" ]; then
        set -x
        CURL_FLAGS=''
      else
        CURL_FLAGS='-s'
      fi
      command -v apk > /dev/null || (command -v apt-get >/dev/null && apt-get update)
      command -v curl > /dev/null || apk add curl || apt-get install curl
      mkdir -p /app/conf/domain
      if [ "$UNIT" != "common" ]; then
        (
          cd /app/conf/domain
          if curl -D /tmp/headers -f $CURL_FLAGS http://CONFIG_SERVER/common.tar.gz -o /tmp/common.tar.gz; then
            tar zxf /tmp/common.tar.gz
            rm -f /tmp/common.tar.gz
          else
            result=$?
            echo curl failed $result
            cat /tmp/headers
            exit $result
          fi
          )
      fi
      (
        cd /app/conf/domain
        if curl -D /tmp/headers -f $CURL_FLAGS http://CONFIG_SERVER/CONFIG_UNIT.tar.gz -o /tmp/unit.tar.gz; then
          tar zxf /tmp/unit.tar.gz
          rm -f /tmp/unit.tar.gz
        else
          result=$?
          echo curl failed $result
          cat /tmp/headers
          exit $result
        fi
      )
      curl $CURL_FLAGS http://CONFIG_SERVER/run-script -o /tmp/script
      if [ -n "$TRACE" ]; then
        sh -x /tmp/script
      else
        chmod +x /tmp/script
        /tmp/script
      fi
      '
